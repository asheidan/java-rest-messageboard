plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    unitTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/unit-test/java')
        }
        resources.srcDir file('src/unit-test/resources')
    }
}

// Marking integration-test as test in IntelliJ
apply plugin: 'idea'
idea.module {
    testSourceDirs += sourceSets.unitTest.java.srcDirs
    inheritOutputDirs = false
    outputDir = compileJava.destinationDir
    testOutputDir = compileTestJava.destinationDir
}

configurations {
    unitTestCompile.extendsFrom testCompile
    unitTestRuntime.extendsFrom testRuntime
    unitTestImplementation.extendsFrom testImplementation
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-arc'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'

    unitTestImplementation 'org.junit.jupiter:junit-jupiter'
}

group 'se.ojoj'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

compileUnitTestJava {
    options.encoding = 'UTF-8'
}

task unitTest(type: Test) {
    group 'verification'
    testClassesDirs = sourceSets.unitTest.output.classesDirs
    classpath = sourceSets.unitTest.runtimeClasspath
    outputs.upToDateWhen { false }
}
check.dependsOn unitTest
test.mustRunAfter unitTest
